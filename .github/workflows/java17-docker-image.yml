name: Docker Image CI

on:
  workflow_call:
    inputs:
      repository:
        description: 'repository'
        required: true
        type: string
      tag_as_latest:
        description: 'tag as latest?'
        required: true
        type: boolean
      java_version:
        description: 'print java / mvn version?'
        default: false
        type: boolean
      dependency_tree:
        description: 'print mvn dependency tree?'
        default: false
        type: boolean
      precompile:
        description: 'precompile script'
        required: false
        type: string
        default: './.github/precompile.sh'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - uses: whelk-io/maven-settings-xml-action@v21
        with:
          repositories: >
            [
              {
                "id": "github-maven-pkg",                
                "url": "https://maven.pkg.github.com/lsnova/ocean-starter",
                "snapshots": {
                  "enabled": "true"                
                }
              }
            ]
          servers: >
            [
              {
                "id": "github-maven-pkg",
                "username": "${{ secrets.MAVEN_PKG_GITHUB_USERNAME }}",
                "password": "${{ secrets.MAVEN_PKG_GITHUB_PASSWORD }}"
              }
            ]
      - name: java / mvn version
        if: inputs.java_version == true
        run: |
          java -version
          mvn -v
      - name: dependency tree
        if: inputs.dependency_tree == true
        run: |
          mvn dependency:tree
      - name: docker login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - name: precompile bash
        shell: bash
        env:
          PRECOMPILE_FILE: ${{inputs.precompile}}
        run: |
          if test -f "$PRECOMPILE_FILE"; then
            echo "running $PRECOMPILE_FILE"
            sh $PRECOMPILE_FILE
          fi
      - name: environment variables
        run: |
          echo "REPOSITORY_NAME=${{inputs.repository}}" >> $GITHUB_ENV
          echo "GIT_COMMIT=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "MVN_VERSION=1.0.0" >> $GITHUB_ENV
          echo "BUILD_DATE=$(TZ=':Europe/Warsaw' date  +%F\ %T\ %Z)" >> $GITHUB_ENV
          echo "DOCKER_VERSION=1.$(TZ=':Europe/Warsaw' date +%y.%j.%H%M%S)" >> $GITHUB_ENV
          echo "GITHUB_REF=$GITHUB_REF" >> $GITHUB_ENV
        shell: bash
      - name: mvn package
        run: |
          mvn clean package -B -U -Ddeploy.commit=$GIT_COMMIT -Ddeploy.docker=$DOCKER_VERSION -Ddeploy.version=$MVN_VERSION -Ddeploy.date="$BUILD_DATE"
      - name: build docker image
        run: |
          docker build . --file Dockerfile --tag $REPOSITORY_NAME:$DOCKER_VERSION
      - name: docker push image
        run: |
          docker push $REPOSITORY_NAME:$DOCKER_VERSION
      - name: push latest image
        if: inputs.tag_as_latest == true
        run: |
          docker tag $REPOSITORY_NAME:$DOCKER_VERSION $REPOSITORY_NAME:latest
          docker push $REPOSITORY_NAME:latest
      - name: create tag
        uses: actions/github-script@v6.4.1
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/build_${{ env.DOCKER_VERSION }}',
              sha: context.sha
            })
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: always()
        env:
          SLACK_WEBHOOK: ${{secrets.SLACK_WEBHOOK}}
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/lsnova.png?size=48
          SLACK_MESSAGE: |
            branch: ${{ env.GITHUB_REF }}
            ${{ env.REPOSITORY_NAME }}:${{ env.DOCKER_VERSION }}
          SLACK_FOOTER: lsn
          SLACK_TITLE: 'Docker Image Build'
          SLACK_USERNAME: github
