name: Copy to EH Ocean Frontend

on:
  workflow_call:
    inputs:
      repository:
        description: 'repository'
        required: true
        type: string
      target_branch:
        description: 'target branch'
        required: false
        default: 'master'
        type: string
      target_directory:
        description: 'target directory'
        required: false
        default: ''
        type: string
      copy_list:
        description: 'list of files and directories to clone'
        required: true
        type: string
      ignore_list:
        description: 'list of files and directories to ignore'
        required: false
        default: ''
        type: string

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_TAG: ${{ steps.tags.outputs.RELEASE_TAG }}
    steps:
      - name: check is tag or release
        if: ${{ github.event_name != 'release' && github.ref_type != 'tag' }}
        run: |
          echo "must be started from a tag or a release" 
          exit 1
      - id: tags
        name: determine tag
        run: |
          echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT


  clone:
    runs-on: ubuntu-latest
    needs: bootstrap
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: setup node with cache
        uses: actions/setup-node@v4
        with:
          cache: 'npm'

      - name: set ssh key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.JENKINS_SSH_KEY }}

      - name: npm install
        run: |
          curl -s https://raw.githubusercontent.com/lsnova/github.actions/master/scripts/change-libs.js > ./change-libs.js
          node ./change-libs.js
          cat package.json
          npm install

      - name: remove files
        shell: bash
        env:
          COPY_LIST: ${{inputs.copy_list}}
          IGNORE_LIST: ${{inputs.ignore_list}}
        run: |
          mkdir output
          for FILE in `echo $COPY_LIST`; do
            echo "processing $FILE [cloning]"
            if [ -f "$FILE" ] || [ -d "$FILE" ]; then
              echo "$FILE exists"            
              DIRNAME=$(dirname $FILE)
              mkdir -p output/$DIRNAME/
              mv $FILE output/$DIRNAME/
            fi
          done
          for FILE in `echo $IGNORE_LIST`; do
            echo "processing $FILE [ignoring]"
            if [ -f "output/$FILE" ] || [ -d "output/$FILE" ]; then
              echo "output/$FILE exists"
              rm -rf output/$FILE          
            fi
          done
          cat output/package.json

      - name: Push to another repository
        uses: lsnova/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: output/
          destination-github-username: 'lsnova'
          destination-repository-name: ${{inputs.repository}}
          user-email: patryks@lsn.io
          target-directory: ${{inputs.target_directory}}
          target-branch: ${{inputs.target_branch}}
          create-target-branch-if-needed: true
          commit-message: ${{ needs.bootstrap.outputs.RELEASE_TAG }}
          tag-name: ${{ needs.bootstrap.outputs.RELEASE_TAG }}
